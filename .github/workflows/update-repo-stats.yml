# File: .github/workflows/update-repo-stats.yml
name: Update Repo Stats

# Trigger orario (ogni ora al minuto 0) + possibilitÃ  di dispatch manuale
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

# Serve il permesso di scrittura sui file del repo
permissions:
  contents: write

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout del repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Setup Python
      - name: Setup Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3) Installa dipendenze (qui solo requests, aggiungi altre se ti servono)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # 4) Esegui lo script
      - name: Run fetch_repo_stats
        run: python scripts/fetch_repo_stats.py

      # 5) Commit & push del file JSON aggiornato
      - name: Commit & Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configura lâ€™utente GitHub Actions Bot

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Aggiungi il file JSON e controlla se ci sono modifiche

          git add public/repo_stats.json
          if git diff --cached --quiet; then
            echo "Nessuna modifica da commettere"
          else
            git commit -m "ðŸ”„ Aggiorna repo_stats.json [skip ci]"
            git push
          fi
